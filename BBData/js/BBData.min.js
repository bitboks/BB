function BBData(data){var self={data:data,bindings:{},observables:{},get:function(key,allowUndefined){if(!key)return self.data;var callback=function(obj,i){return obj&&"undefined"!=typeof obj[i]?obj[i]:allowUndefined?void 0:null};return key.split(".").reduce(callback,self.data)},set:function(path,value){console.log("set path: "+path),path.split(".").reduce(function(prev,cur,idx,arr){var isLast=idx===arr.length-1;return isLast?void(prev[cur]=value):self.isObject(prev[cur])?prev[cur]:prev[cur]={}},self.data),self.updateBoundElementsForPath(path,value),self.updateBoundElementsAtPath(path,value),self.observables[path]&&self.notifyObserversForPath(path,value),self.notifyObserversFromPath(path)},isObject:function(potentionalObject){return"object"==typeof potentionalObject&&null!==potentionalObject},isArray:function(potentionalArray){return"undefined"==typeof Array.isArray?"[object Array]"===Object.prototype.toString.call(potentionalArray):Array.isArray(potentionalArray)},bind:function(domElement,path,attribute,options){if(domElement instanceof HTMLElement){if(domElement){attribute||(attribute="value"),options||(options={}),"undefined"==typeof options.twoways&&(options.twoways=!0),"undefined"==typeof options.event&&(options.event="change"),self.bindings[path]||(self.bindings[path]={}),self.bindings[path][attribute]||(self.bindings[path][attribute]=[]);var binding={element:domElement,options:options,handler:function(e){return options.twoways?void self.domChange(e,path,attribute):void e.preventDefault()}};self.bindings[path][attribute].push(binding),domElement.addEventListener(binding.options.event,binding.handler,!1),self.updateBoundElementsForPathAndAttribute(path,attribute,self.get(path)),console.log("self.bindings: %o",self.bindings)}}else for(var i=0;i<domElement.length;i++)domElement[i]instanceof HTMLElement&&self.bind(domElement[i],path,attribute,options)},unbind:function(domElement,path,attribute){if(self.bindings[path])if(domElement instanceof HTMLElement){if(attribute||(attribute="value"),self.bindings[path][attribute])for(var i=0;i<self.bindings[path][attribute].length;i++){var binding=self.bindings[path][attribute][i];domElement===binding.element&&(domElement.removeEventListener(binding.options.event,binding.handler,!1),self.bindings[path][attribute].splice(i,1))}}else for(var i=0;i<domElement.length;i++)domElement[i]instanceof HTMLElement&&self.unbind(domElement[i],path,attribute)},domChange:function(e,path,attribute){if(self.bindings[path]&&self.bindings[path][attribute])for(var i=0;i<self.bindings[path][attribute].length;i++){var binding=self.bindings[path][attribute][i];if(e.target===binding.element){var value=binding.element.value;binding.options.valueTransformer&&(value=binding.options.valueTransformer.reverseTransformedValue(value)),self.set(path,value)}}},updateBoundElementsForPath:function(path,value){if(!self.bindings[path])return void console.log("No bindings for path: "+path);for(var attribute in self.bindings[path])self.updateBoundElementsForPathAndAttribute(path,attribute,value)},updateBoundElementsAtPath:function(path,value){if(self.isObject(value))for(key in value)self.updateBoundElementsAtPathRecursivly(path+"."+key,value[key])},updateBoundElementsAtPathRecursivly:function(path,value){if(self.bindings[path])for(var attribute in self.bindings[path])self.updateBoundElementsForPathAndAttribute(path,attribute,value);if(self.isObject(value))for(key in value)self.updateBoundElementsAtPathRecursivly(path+"."+key,value[key])},updateBoundElementsForPathAndAttribute:function(path,attribute,value){if(!self.bindings[path])return void console.log("No bindings for path: "+path);if(!self.bindings[path][attribute])return void console.log("No bindings for attribute "+attribute+" for path: "+path);for(var i=0;i<self.bindings[path][attribute].length;i++){var element=self.bindings[path][attribute][i].element,options=self.bindings[path][attribute][i].options,modifiedValue=value;if(options.valueTransformer?modifiedValue=options.valueTransformer.transformedValue(modifiedValue):options.boolean?modifiedValue=!!value:options.negateBoolean&&(modifiedValue=!value),"SELECT"!=element.tagName){if(self.isBooleanAttribute(attribute)){if(!modifiedValue){self.isProperty(attribute,element)&&(element[attribute]=modifiedValue),element.removeAttribute(attribute);continue}modifiedValue=attribute}self.isProperty(attribute,element)&&(element[attribute]=modifiedValue),element.setAttribute(attribute,modifiedValue)}else{if("option"==attribute)if(self.isArray(modifiedValue)){element.innerHTML="";for(var ii=0;ii<modifiedValue.length;ii++){var optionEl=document.createElement("option"),optionValue=modifiedValue[ii];if(self.isObject(optionValue))for(var property in optionValue)optionEl[property]=optionValue[property];else optionEl.value=optionValue,optionEl.innerHTML=optionValue;element.appendChild(optionEl)}}else console.warn('Bound value path "'+path+'" is not an array. Cannot create option-elements for select-element.');for(var ii=0;ii<element.options.length;ii++)element.options[ii].value==modifiedValue?element.options[ii].selected="selected":element.options[ii].removeAttribute("selected")}}},isBooleanAttribute:function(attribute){var booleans=["allowfullscreen","async","autofocus","checked","compact","declare","default","defer","disabled","formnovalidate","hidden","inert","ismap","itemscope","multiple","multiple","muted","nohref","noresize","noshade","novalidate","nowrap","open","readonly","required","reversed","seamless","selected","sortable","truespeed","typemustmatch","contenteditable","spellcheck"];return booleans.indexOf(attribute)>-1},isProperty:function(attribute,element){return"undefined"!=typeof element[attribute]},observe:function(path,callback){path||(path=null),self.observables[path]||(self.observables[path]=[]),self.observables[path].push(callback),console.log("self.observables: %o",self.observables)},notifyObserversForPath:function(path,value){if(self.observables[path])for(var i=0;i<self.observables[path].length;i++)self.observables[path][i]({path:path,value:value})},notifyObserversFromPath:function(path){var parts=path.split(".");for(parts.pop();parts.length>0;){var currentPath=parts.join(".");self.observables[currentPath]&&self.notifyObserversForPath(currentPath,self.get(currentPath)),parts.pop()}self.notifyObserversForPath(null,self.get(""))}};return{get:function(path,allowUndefined){return self.get(path,allowUndefined)},set:function(path,value){self.set(path,value)},getData:function(){return self.data},bind:function(domElement,path,attribute,options){self.bind(domElement,path,attribute,options)},unbind:function(domElement,path,attribute){self.unbind(domElement,path,attribute)},getBindings:function(){return self.bindings},observe:function(path,callback){self.observe(path,callback)},unobserve:function(path,callback){},getObservables:function(){return self.observables}}}