/**
 * BBData
 * Data-store with bindings and observables for Javascript
 * https://github.com/bitboks/BB/tree/master/BBData
 * http://www.bitboks.no/sourcecode/bbdata
 */

function BBData(data){var self={data:data,bindings:{},observables:{},get:function(key,allowUndefined){if(!key)return self.data;var callback=function(value,index){return value&&typeof value[index]!=="undefined"?value[index]:allowUndefined?undefined:null};return key.split(".").reduce(callback,self.data)},set:function(path,value,element){if(self.get(path)===value){return}var modifiedPath=path;path.split(".").reduce(function(prev,cur,idx,arr){var isLast=idx===arr.length-1;if(isLast){if(Array.isArray(prev)){var index=parseInt(cur,10);if(index>prev.length){cur=prev.length}else if(index<0){cur=0}var parentPath=self.getParentPath(path);modifiedPath=(parentPath?parentPath+".":"")+cur}var isNew=typeof prev[cur]=="undefined";prev[cur]=value;self.notify(modifiedPath,value,isNew?"create":"update",element);return}return self.isObject(prev[cur])?prev[cur]:prev[cur]={}},self.data)},move:function(fromPath,toPath){if(fromPath==toPath)return;if(self.isInArray(toPath)){self.moveInArray(fromPath,toPath)}else{self.moveInObject(fromPath,toPath)}},moveInObject:function(fromPath,toPath){var value=self.get(fromPath);self.delete(fromPath);self.set(toPath,value)},moveInArray:function(fromPath,toPath){var value=self.get(fromPath);self.delete(fromPath);toPath.split(".").reduce(function(prev,cur,idx,arr){var isLast=idx===arr.length-1;if(isLast){var index=parseInt(cur,10);if(isNaN(index))index=0;if(index>prev.length){index=prev.length}prev.splice(index,0,value);var parentPath=self.getParentPath(toPath);var modifiedPath=(parentPath?parentPath+".":"")+index;self.notify(modifiedPath,value,"create",null);return}return self.isObject(prev[cur])?prev[cur]:prev[cur]={}},self.data)},delete:function(path){path.split(".").reduce(function(prev,cur,idx,arr){var isLast=idx===arr.length-1;if(isLast){self.unbindAll(path);self.unobserve(path);if(Array.isArray(prev)){prev.splice(cur,1)}else{delete prev[cur]}self.notify(path,null,"delete",null);return}return self.isObject(prev[cur])?prev[cur]:prev[cur]={}},self.data)},isObject:function(potentionalObject){return typeof potentionalObject==="object"&&potentionalObject!==null},isArray:function(potentionalArray){if(typeof Array.isArray==="undefined"){return Object.prototype.toString.call(potentionalArray)==="[object Array]"}else{return Array.isArray(potentionalArray)}},getParentValue:function(path){var parts=path.split(".");parts.pop();var parentPath=parts.join(".");if(!parentPath)parentPath=null;return self.get(parentPath)},getParentPath:function(path){path=path.split(".");path.pop();return path.join(".")},isInArray:function(path){var value=self.getParentValue(path);return self.isArray(value)},bind:function(domElement,path,attribute,options){if(!domElement){console.warn('BBData: Cannot bind path "'+path+'", no dom-element supplied.');return}if(!(domElement instanceof HTMLElement)){for(var i=0;i<domElement.length;i++){if(domElement[i]instanceof HTMLElement){self.bind(domElement[i],path,attribute,options)}}return}if(!domElement)return;if(!attribute)attribute="value";if(!options)options={};if(typeof options.twoways=="undefined")options.twoways=true;if(typeof options.event=="undefined")options.event="change";if(!self.bindings[path])self.bindings[path]={};if(!self.bindings[path][attribute])self.bindings[path][attribute]=[];var binding={element:domElement,options:options,handler:function(e){if(!options.twoways){e.preventDefault();return}self.domChange(e,path,attribute)}};self.bindings[path][attribute].push(binding);domElement.addEventListener(binding.options.event,binding.handler,false);self.updateBoundElementsForPathAndAttribute(path,attribute,self.get(path))},unbind:function(domElement,path,attribute){if(!self.bindings[path])return;if(!(domElement instanceof HTMLElement)){for(var i=0;i<domElement.length;i++){if(domElement[i]instanceof HTMLElement){self.unbind(domElement[i],path,attribute)}}return}if(!attribute)attribute="value";if(!self.bindings[path][attribute])return;for(var i=0;i<self.bindings[path][attribute].length;i++){var binding=self.bindings[path][attribute][i];if(domElement===binding.element){domElement.removeEventListener(binding.options.event,binding.handler,false);self.bindings[path][attribute].splice(i,1)}}},unbindAll:function(optionalPath){optionalPath=optionalPath||"";for(var path in self.bindings){if(path.indexOf(optionalPath)==0){for(var attribute in self.bindings[path]){self.bindings[path][attribute].forEach(function(binding){binding.element.removeEventListener(binding.options.event,binding.handler,false);self.bindings[path][attribute].shift()});delete self.bindings[path][attribute]}delete self.bindings[path]}}},notify:function(path,value,action,element){self.updateBoundElementsForPath(path,value);self.updateBoundElementsAtPath(path,value);if(self.observables[path]){self.notifyObserversForPath(path,value,path,action,element)}self.notifyObserversFromPath(path,action,element)},domChange:function(e,path,attribute){if(!self.bindings[path])return;if(!self.bindings[path][attribute])return;for(var i=0;i<self.bindings[path][attribute].length;i++){var binding=self.bindings[path][attribute][i];if(e.target===binding.element){var value=binding.element[attribute];if(binding.options.valueTransformer){value=binding.options.valueTransformer.reverseTransformedValue(value,binding.element)}self.set(path,value,binding.element)}}},updateBoundElementsForPath:function(path,value){if(!self.bindings[path]){return}for(var attribute in self.bindings[path]){self.updateBoundElementsForPathAndAttribute(path,attribute,value)}},updateBoundElementsAtPath:function(path,value){if(!self.isObject(value)){return}for(key in value){self.updateBoundElementsAtPathRecursivly(path+"."+key,value[key])}},updateBoundElementsAtPathRecursivly:function(path,value){if(self.bindings[path]){for(var attribute in self.bindings[path]){self.updateBoundElementsForPathAndAttribute(path,attribute,value)}}if(self.isObject(value)){for(key in value){self.updateBoundElementsAtPathRecursivly(path+"."+key,value[key])}}},updateBoundElementsForPathAndAttribute:function(path,attribute,value){if(!self.bindings[path]){return}if(!self.bindings[path][attribute]){return}for(var i=0;i<self.bindings[path][attribute].length;i++){var element=self.bindings[path][attribute][i].element;var options=self.bindings[path][attribute][i].options;var modifiedValue=value;if(options.valueTransformer){modifiedValue=options.valueTransformer.transformedValue(modifiedValue,element)}else if(options.boolean){modifiedValue=value?true:false}else if(options.negateBoolean){modifiedValue=value?false:true}else if(options.booleanCondition){modifiedValue=value==options.booleanCondition?true:false}else if(options.negateBooleanCondition){modifiedValue=value==options.negateBooleanCondition?false:true}if(element.tagName=="SELECT"&&attribute=="option"){if(self.isArray(modifiedValue)){element.innerHTML="";for(var ii=0;ii<modifiedValue.length;ii++){var optionEl=document.createElement("option");var optionValue=modifiedValue[ii];if(self.isObject(optionValue)){for(var property in optionValue){optionEl[property]=optionValue[property]}}else{optionEl.value=optionValue;optionEl.innerHTML=optionValue}element.appendChild(optionEl)}}else{console.warn('Bound value path "'+path+'" is not an array. Cannot create option-elements for select-element.')}for(var ii=0;ii<element.options.length;ii++){if(element.options[ii].value==modifiedValue){element.options[ii].selected="selected"}else{element.options[ii].removeAttribute("selected")}}continue}if(self.isBooleanAttribute(attribute)){if(modifiedValue){modifiedValue=attribute}else{if(self.isProperty(attribute,element)){element[attribute]=modifiedValue}element.removeAttribute(attribute);continue}}if(self.isProperty(attribute,element)){element[attribute]=modifiedValue}else{element.setAttribute(attribute,modifiedValue)}}},isBooleanAttribute:function(attribute){var booleans=["allowfullscreen","async","autofocus","checked","compact","contenteditable","declare","default","defer","disabled","formnovalidate","hidden","inert","ismap","itemscope","multiple","muted","nohref","noresize","noshade","novalidate","nowrap","open","readonly","required","reversed","seamless","selected","sortable","spellcheck","truespeed","typemustmatch"];return booleans.indexOf(attribute)>-1},isProperty:function(attribute,element){return typeof element[attribute]!=="undefined"},observe:function(path,callback){if(!path)path=null;if(!self.observables[path])self.observables[path]=[];self.observables[path].push(callback)},unobserve:function(path){if(!self.observables[path])return;self.observables[path].splice(0,self.observables[path].length)},unobserveAll:function(optionalPath){optionalPath=optionalPath||"";for(var path in self.observables){if(path.indexOf(optionalPath)==0){self.unobserve(path);delete self.observables[path]}}},remove:function(){self.unobserveAll();self.unbindAll();self.data=null},notifyObserversForPath:function(path,value,changedPath,action,element){if(!self.observables[path]){return}for(var i=0;i<self.observables[path].length;i++){self.observables[path][i]({path:path,action:action,changedPath:changedPath,value:value,element:element})}},notifyObserversFromPath:function(path,action,element){var parts=path.split(".");parts.pop();while(parts.length>0){var currentPath=parts.join(".");if(self.observables[currentPath]){self.notifyObserversForPath(currentPath,self.get(currentPath),path,action,element)}parts.pop()}self.notifyObserversForPath(null,self.get(""),path,action,element)}};return{get:function(path,allowUndefined){return self.get(path,allowUndefined)},set:function(path,value,element){self.set(path,value,element)},move:function(fromPath,toPath){self.move(fromPath,toPath)},delete:function(path){self.delete(path)},getData:function(){return self.data},bind:function(domElement,path,attribute,options){self.bind(domElement,path,attribute,options)},unbind:function(domElement,path,attribute){self.unbind(domElement,path,attribute)},unbindAll:function(optionalPath){self.unbindAll(optionalPath)},getBindings:function(){return self.bindings},observe:function(path,callback){self.observe(path,callback)},unobserve:function(path){self.unobserve(path)},getObservables:function(){return self.observables},remove:function(){self.remove()}}}